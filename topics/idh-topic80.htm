<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>C# basics</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: #f0f3f7;
  margin: 12px 0 12px 0;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?ee52a2d5"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 80;
</script>
</head>
<body>
<div align="center">
  <table class="tbl0">
    <tr class="row0">
      <td class="cell0">
        <p class="ps0"><span class="ts0">&nbsp;</span></p>
      </td>
      <td class="cell1">
        <div align="center">
          <table class="tbl6">
            <tr class="row0">
              <td class="cell0">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
              <td class="cell1">
                <div align="center">
                  <table class="tbl0">
                    <tr class="row0">
                      <td class="cell1">
                        <p class="ps1"><span class="ts1">Navigation: </span><a href="idh-topic20.htm" class="hs0">Tab1: Tekla Database</a><span class="ts1">&nbsp;&gt; </span></p>
                        <p class="ps2"><span class="ts2">C# basics</span></p>
                      </td>
                      <td class="cell2">
                        <p class="ps3"><a href="idh-topic40.htm" title="User Interface" class="hs0">Previous</a><span class="ts1">&nbsp;</span><a href="idh-topic50.htm" title="Samples" class="hs0">Next</a></p>
                      </td>
                    </tr>
                  </table>
                </div>
              </td>
              <td class="cell0">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
            </tr>
            <tr class="row0">
              <td class="cell0">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
              <td class="cell2">
                <p class="ps4"><span class="ts3">&nbsp;</span></p>
                <div align="center">
                  <table class="tbl4">
                    <tr class="row0">
                      <td class="cell0" rowspan="2">
                        <p class="ps10"><img width="65" height="62" border="0" src="images/images/cs.png" /></p>
                      </td>
                      <td class="cell1" rowspan="2">
                        <p class="ps11"><span class="ts28">&nbsp;C# Basics</span></p>
                      </td>
                    </tr>
                  </table>
                </div>
                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                <div align="center">
                  <table class="tbl2">
                    <tr class="row0">
                      <td class="cell24">
                        <p class="ps0"><span class="ts14">This chapter is for those who are not so much familiar with </span><span class="ts16">C#</span><span class="ts14">&nbsp;but wants to use it for interacting with Tekla Structures. So in this section we'll focus on query area and discuss about some primary aspects of </span><span class="ts24">C#</span><span class="ts14">&nbsp;language and </span><span class="ts24">LINQ</span><span class="ts14">&nbsp;syntax.</span></p>
                      </td>
                      <td class="cell25">
                        <p class="ps0"><img width="316" height="370" border="0" src="images/images/cssyntaxarea.png" /></p>
                      </td>
                    </tr>
                  </table>
                </div>
                <p class="ps16"><span class="ts16">In this Chapter:</span></p>
                <p class="ps16"><span class="ts11">- </span><a href="idh-topic80.htm#TB1_CSSyntax" class="hs1">About C# syntax</a><span class="ts11">&nbsp;</span></p>
                <p class="ps16"><span class="ts11">- </span><a href="idh-topic80.htm#TB1_QUERY" class="hs1">About query &amp; LINQ syntax</a></p>
                <p class="ps16"><span class="ts11">- </span><a href="idh-topic80.htm#TB1_QUERY_D" class="hs1">Look closer to query</a></p>
                <p class="ps21"><span class="ts46">- </span><a href="idh-topic80.htm#TB1_XAPI" class="hs2">TeklaPad's additional features (Extended API)</a><span class="ts47">&nbsp;</span><span class="ts48">(Updated in v1.0.9)</span></p>
                <p class="ps16"><span class="ts11">- </span><a href="idh-topic80.htm#TB1_INTELLISENSE" class="hs1">About intellisense </a></p>
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
                <div class="block0">
                  <div class="hline0"></div>
                </div>
                <p class="ps0"><span class="ts14">&nbsp;</span></p>
                <p class="ps0"><a name="TB1_CSSyntax"></a><span class="ts16">&gt;About C# syntax</span></p>
                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                <div align="center">
                  <table class="tbl0">
                    <tr class="row0">
                      <td class="cell3" colspan="2">
                        <p class="ps5"><span class="ts12">Comment lines:</span></p>
                        <p class="ps5"><span class="ts8">Every line that starts with &quot;//&quot; is a comment line. Comments can be used to document what the program (query) does. It makes your query more readable. Since the C# compiler ignores comments, you can include them anywhere in a program without affecting your code.</span></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="466" height="296" border="0" src="images/images/comments.png" /></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell3">
                        <p class="ps0"><img width="273" height="262" border="0" src="images/images/commentpic.png" /></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3" colspan="2">
                        <p class="ps5"><span class="ts12">Statement terminators:</span></p>
                        <p class="ps5"><span class="ts8">Every C# statement, not every line, ends with semicolon (&quot;;&quot;).</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="469" height="297" border="0" src="images/semicolons-m.png" /></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell3">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                  </table>
                </div>
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
                <div class="block0">
                  <div class="hline0"></div>
                </div>
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
                <p class="ps0"><a name="TB1_QUERY"></a><span class="ts16">&gt;About query &amp; LINQ syntax</span></p>
                <p class="ps0"><span class="ts16">&nbsp;</span></p>
                <div align="center">
                  <table class="tbl2">
                    <tr class="row0">
                      <td class="cell26" colspan="2">
                        <p class="ps5"><span class="ts49">var</span><span class="ts12">&nbsp;keyword:</span></p>
                        <p class="ps5"><span class="ts8">var (means &quot;variable&quot;) is used to define an arbitrary name (for example: </span><span class="ts37">SampleQuery</span><span class="ts8">) for query (or any variable). </span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Database:</span></p>
                        <p class="ps5"><span class="ts8">Database is a </span><span class="ts37">predefined </span><span class="ts8">variable which is responsible for storing the current user selection (Discussed more </span><a href="idh-topic80.htm#TB1_MAINDB" class="hs3">here</a><span class="ts8">)</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_DDV"></a><span class="ts39">DrawingDatabase </span><span class="ts50">(Available since v 1.0.9)</span><span class="ts39">:</span></p>
                        <p class="ps5"><span class="ts8">DrawingDatabase is a </span><span class="ts37">predefined </span><span class="ts8">variable which is responsible for storing the current user selection in a drawing (Discussed more </span><a href="idh-topic80.htm#TB1_NDDB" class="hs3">here</a><span class="ts8">)</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts49">return </span><span class="ts12">keyword:</span></p>
                        <p class="ps5"><span class="ts8">Returns the result to the data table. </span></p>
                        <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;This statement is not arbitrary. You </span><span class="ts12">must </span><span class="ts8">declare the final result for passing to data table. </span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell26">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="567" height="234" border="0" src="images/images/methodbody.png" /></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell27">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell26" colspan="2">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Query body: </span></p>
                        <p class="ps5"><span class="ts8">C# query syntax (LINQ) is very similar to SQL (Structured Query Language) in database. The LINQ (Language Integrated Query) syntax starts with </span><span class="ts49">from</span><span class="ts51">&nbsp;</span><span class="ts8">keyword and ends with </span><span class="ts49">select</span><span class="ts8">&nbsp;keyword, and the conditions are defined by </span><span class="ts52">where </span><span class="ts8">keyword.</span></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell26">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="569" height="235" border="0" src="images/images/query.png" /></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts25">Tip</span><span class="ts26">:</span><span class="ts8">&nbsp;You can also use the &quot;standard&quot; syntax. Find more </span><a href="idh-topic50.htm#SCR1" class="hs3">here</a><span class="ts8">.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell27">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell28" colspan="2">
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps0"><a name="TB1_QUERY_D"></a><span class="ts16">&gt;Look closer to query</span></p>
                        <p class="ps0"><span class="ts16">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">In general, creating a query contains three steps:</span></p>
                        <div align="center">
                          <table class="tbl2">
                            <tr class="row0">
                              <td class="cell29">
                                <p class="ps5"><span class="ts8">1- Defining the original data source (</span><span class="ts12">Database/DrawingDatabase</span><span class="ts8">).</span></p>
                                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                                <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;Defining the original database is done by using </span><span class="ts52">&quot;from&quot; </span><span class="ts8">keyword in LINQ syntax.</span></p>
                              </td>
                              <td class="cell30">
                                <p class="ps5"><span class="ts8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><img width="108" height="96" border="0" src="images/table.png" /></p>
                                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                              </td>
                            </tr>
                            <tr class="row0">
                              <td class="cell29">
                                <p class="ps5"><span class="ts8">2- Filtering on rows (only choose some rows by putting some conditions). </span></p>
                                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                                <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;In LINQ syntax this step is typically done by using </span><span class="ts52">&quot;where&quot;</span><span class="ts8">&nbsp;keyword.</span></p>
                              </td>
                              <td class="cell30">
                                <p class="ps0"><img width="146" height="94" border="0" src="images/qs2n.png" /></p>
                                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                              </td>
                            </tr>
                            <tr class="row0">
                              <td class="cell29">
                                <p class="ps5"><span class="ts8">3- Filtering on columns (choose only some defined columns) and selecting (construct) the </span><span class="ts52">new</span><span class="ts12">&nbsp;</span><span class="ts8">table from original table.</span></p>
                                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                                <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;In LINQ syntax this step is typically done by using </span><span class="ts52">&quot;select&quot; </span><span class="ts8">and </span><span class="ts52">new</span><span class="ts12">&nbsp;</span><span class="ts8">keywords.</span></p>
                              </td>
                              <td class="cell30">
                                <p class="ps0"><img width="276" height="129" border="0" src="images/qs5n.png" /></p>
                              </td>
                            </tr>
                          </table>
                        </div>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">Now let's see these 3-steps in a practical example:</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps0"><img width="628" height="447" border="0" src="images/linqpractice.png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">or you can use </span><a href="idh-topic100.htm#TipOfType" class="hs3">OfType&lt;&gt;</a><span class="ts8">&nbsp;method to bypass the null check:</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><img width="607" height="415" border="0" src="images/anotherlinqpractice.png" /></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><img width="20" height="20" border="0" src="images/info.png" /><span class="ts8">You can find more important techniques about queries in </span><a href="idh-topic100.htm" class="hs3">Tips</a><span class="ts8">&nbsp;page.</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><a name="TB1_XAPI"></a><span class="ts15">&nbsp;</span><span class="ts16">&gt;Extended API </span></p>
                        <p class="ps0"><img width="247" height="74" border="0" src="images/images/image(7).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps0"><span class="ts10">Extended API (</span><span class="ts9">xAPI</span><span class="ts10">) is called to the exclusive additional features that are only accessible </span><span class="ts53">while using the first tab</span><span class="ts10">&nbsp;of TeklaPad. Utilizing this functions makes extracting data more easy/efficient. </span></p>
                        <p class="ps0"><span class="ts11">&nbsp;</span></p>
                        <p class="ps0"><span class="ts10">Please note that TeklaPad by default uses the following namespace aliases:</span></p>
                        <p class="ps22"><span class="ts54">&bull;</span><span class="ts55">TSD&nbsp;&nbsp;&nbsp;= Tekla.Structures.Drawing</span></p>
                        <p class="ps22"><span class="ts54">&bull;</span><span class="ts55">TSMUI = Tekla.Structures.Model.UI</span></p>
                        <p class="ps22"><span class="ts54">&bull;</span><span class="ts55">TSDUI = Tekla.Structures.Drawing.UI</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><span class="ts10">Here you can find more details about extended features:</span></p>
                        <p class="ps0"><span class="ts56">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_MAINDB" class="hs3">Database</a></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_NDDB" class="hs3">DrawingDatabase</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_EMODEL" class="hs3">EntireModel</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_EDRAWING" class="hs3">EntireDrawing</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_GTR" class="hs3">GetTeklaReport</a></p>
                        <p class="ps24"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_POUT" class="hs7">GetTeklaPullOut</a><span class="ts57">&nbsp;</span><span class="ts48">(Updated)</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_PartList" class="hs3">PartList</a></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_GetArray" class="hs3">GetArray</a></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_DR2MODEL" class="hs3">GetModelObjectsOfType&lt;T&gt;</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_IsValidModelObj" class="hs3">IsValidModelObjectOfType&lt;T&gt;</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_DR2MODEL2" class="hs3">GetModelObjectOfType&lt;T&gt;</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_DRAWINGS" class="hs3">GetSelectedDrawings</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_PickObj" class="hs3">PickObjectsOfType&lt;T&gt;</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_PickPoints" class="hs3">PickPoints</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_GetField" class="hs3">GetField</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_DelimitedReader" class="hs3">ReadDelimitedData</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_MDHighlighter" class="hs3">Highlight</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_WP2Local" class="hs3">SetToLocalWorkPlaneOf</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_WP2Global" class="hs3">SetToGlobalWorkPlane</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps23"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic80.htm#TB1_WP" class="hs3">SetToWorkPlane</a><span class="ts12">&nbsp;</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><a name="TB1_MAINDB"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts58">&quot;Database&quot;</span></p>
                        <p class="ps5"><span class="ts8">This is a predefined variable which is responsible for storing the current user selection. After selecting of any area in model, the related data will be stored in this variable automatically and can be used in your query body.</span></p>
                        <p class="ps5"><span class="ts26">Note1: </span><span class="ts8">This variables does not preserve the selection order.</span></p>
                        <p class="ps5"><span class="ts26">Note2: </span><span class="ts15">If you want to run your query over the all model objects, It's recommended to use </span><a href="idh-topic80.htm#TB1_EMODEL" class="hs3">EntireModel</a><span class="ts15">&nbsp;variable instead.</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (Query):</span></p>
                        <p class="ps5"><img width="427" height="141" border="0" src="images/image(1).png" /><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps8"><span class="ts39">Usage sample2 (Query)</span><span class="ts59">Recommended </span><span class="ts39">:</span></p>
                        <p class="ps0"><img width="434" height="103" border="0" src="images/image(2).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample3 (Command):</span></p>
                        <p class="ps0"><img width="379" height="229" border="0" src="images/image(13).png" /></p>
                        <p class="ps0">&nbsp;</p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_NDDB"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;DrawingDatabase&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This is a predefined variable which is responsible for storing the current user selection in a drawing. After selecting of any area in drawing, the related data will be stored in this variable automatically and can be used in your query body (Discussed more</span><span class="ts15">&nbsp;in </span><a href="idh-topic50.htm#FSD1" class="hs3">Sample12</a><span class="ts15">&nbsp;~ </span><a href="idh-topic50.htm#FSD4" class="hs3">Sample15</a><span class="ts8">)</span></p>
                        <p class="ps5"><span class="ts26">Note1: </span><span class="ts8">This variables does not preserve the selection order.</span></p>
                        <p class="ps5"><span class="ts26">Note2: </span><span class="ts15">If you want to run your query over the all drawing objects, It's recommended to use </span><a href="idh-topic80.htm#TB1_EDRAWING" class="hs3">EntireDrawing</a><span class="ts15">&nbsp;variable instead.</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (Query):</span></p>
                        <p class="ps0"><img width="477" height="100" border="0" src="images/image(14).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample2 (Query):</span></p>
                        <p class="ps0"><img width="557" height="102" border="0" src="images/image(15).png" /></p>
                        <p class="ps5"><span class="ts38">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample3 (Command):</span></p>
                        <p class="ps0"><img width="474" height="205" border="0" src="images/image(17).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts26">Important: </span><span class="ts8">Drawing objects are </span><span class="ts12">not </span><span class="ts8">the same as model objects. Drawings are just presentations of the model objects. Drawing object types are stored in </span><span class="ts12">TSD </span><span class="ts8">(</span><span class="ts12">T</span><span class="ts8">ekla.</span><span class="ts12">S</span><span class="ts8">tructures.</span><span class="ts12">D</span><span class="ts8">rawing) namespace alias in order to avoid conflicting with model object names. Here is a quick comparison:</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><img width="374" height="256" border="0" src="images/image(18).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps0"><img width="664" height="225" border="0" src="images/image(30).png" /></p>
                        <p class="ps0">&nbsp;</p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_EMODEL"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;EntireModel&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This is a predefined variable which returns </span><span class="ts17">all</span><span class="ts8">&nbsp;model objects in current model (regardless of selected objects in model).</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="459" height="100" border="0" src="images/image(12).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_EDRAWING"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;EntireDrawing&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This is a predefined variable which returns </span><span class="ts17">all</span><span class="ts8">&nbsp;drawing objects in current drawing (regardless of selected objects in drawing).</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="550" height="116" border="0" src="images/image(11).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><a name="TB1_GTR"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts58">&quot;GetTeklaReport&quot;</span><span class="ts12">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">Use this function to extract predefined Tekla template properties from the selected objects in model.</span></p>
                        <p class="ps5"><span class="ts26">Note1:</span><span class="ts8">&nbsp;This function accepts template attributes. Some attributes can be found on &quot;view filter&quot;&nbsp;dialog box and complete list can be found on &quot;Template Attribute Reference Guide&quot;.</span></p>
                        <p class="ps5"><span class="ts26">Note2:</span><span class="ts8">&nbsp;GetTeklaReport function's input is flexible and is not case sensitive. So, &quot;LENGTH_NET&quot; and &quot;length_net&quot; and &quot;length net&quot; (or &quot;length&nbsp;&nbsp;&nbsp; net&quot; or &quot;LenGth NET&quot;) gives the same results. </span></p>
                        <p class="ps5"><span class="ts26">Note3:</span><span class="ts8">&nbsp;You can also define precision (between 0 and 9) for numeric values. default value is 2. It is optional and also has no effect on non-numeric values.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage samples:</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaReport(&quot;length net&quot;)</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Returns net length of object (it returns &quot;-&quot; if failed to calculate that attribute) with default precision (2 digits).</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaReport(&quot;volume&quot;, 8)</span><span class="ts8">&nbsp;&nbsp; ==&gt; </span><span class="ts42">Returns volume of object with 8 digits of precision.</span></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell31">
                        <p class="ps7"><img width="472" height="87" border="0" src="images/images/gtr1.png" /></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="487" height="377" border="0" src="images/images/templateattributes1.png" /></p>
                        <p class="ps6"><span class="ts8">[View filter dialog box]</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="362" height="294" border="0" src="images/images/image(8).png" /></p>
                        <p class="ps6"><span class="ts8">[Template Attribute Reference Guide]</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell32">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell33" colspan="2">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_POUT"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;GetTeklaPullOut&quot;</span><span class="ts50">(Available since v 1.0.8):</span></p>
                        <p class="ps5"><span class="ts8">This function returns pull-out picture for </span><span class="ts12">numbered</span><span class="ts8">&nbsp;reinforcements (in </span><span class="ts12">numbered</span><span class="ts8">&nbsp;cast units).</span></p>
                        <p class="ps5"><span class="ts26">Note1:</span><span class="ts8">&nbsp;This function accepts 9 named (optional) parameters:</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><img width="904" height="94" border="0" src="images/image(39).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">1) ImageWidth:</span><span class="ts8">&nbsp;indicates approximate width of image in pixel. </span><span class="ts12">(Min:60, Default:150)</span></p>
                        <p class="ps5"><span class="ts12">2) Image Height:</span><span class="ts8">&nbsp;indicates approximate height of image in pixel. </span><span class="ts12">(Min:30, Default:100)</span></p>
                        <p class="ps5"><span class="ts12">3) FontSize:</span><span class="ts8">&nbsp;Indicate font size on pull-out picture. </span><span class="ts12">(Default:3 Max:6)</span></p>
                        <p class="ps5"><span class="ts12">4) FontColor: </span><span class="ts8">Indicates font color. </span><span class="ts12">(1~13 Default:1)</span></p>
                        <p class="ps5"><span class="ts12">5) ScaleType:</span><span class="ts8">&nbsp;If you set this attribute to &quot;true&quot;, the pull-out pictures will be scaled to fit the available space in both X and Y dimensions. </span></p>
                        <p class="ps5"><span class="ts8">As a result, the shape becomes out of proportion, but small segments can be seen more easily. </span><span class="ts12">(Default: false) </span></p>
                        <p class="ps17"><span class="ts39">6) RotationAxis:</span><span class="ts40">&nbsp;</span><span class="ts62">0</span><span class="ts57">= by view , </span><span class="ts62">1</span><span class="ts57">= by global Z , </span><span class="ts62">2</span><span class="ts57">= by local axis</span><span class="ts57">. </span><span class="ts62">(</span><span class="ts62">Defalut: 2</span><span class="ts62">) </span><span class="ts48">Available since v 1.0.9</span></p>
                        <p class="ps17"><span class="ts39">7) </span><span class="ts39">Dimensions</span><span class="ts39">:</span><span class="ts40">&nbsp;</span><span class="ts57">true / false. </span><span class="ts62">(</span><span class="ts62">Defalut: true</span><span class="ts62">) </span><span class="ts48">Available since v 1.0.9</span></p>
                        <p class="ps17"><span class="ts39">8) </span><span class="ts39">Exaggeration</span><span class="ts39">:</span><span class="ts40">&nbsp;</span><span class="ts57">true / false. </span><span class="ts62">(</span><span class="ts62">Defalut: true</span><span class="ts62">) </span><span class="ts48">Available since v 1.0.9</span></p>
                        <p class="ps17"><span class="ts39">9) </span><span class="ts39">BendingAngle</span><span class="ts39">:</span><span class="ts40">&nbsp;</span><span class="ts57">true / false. </span><span class="ts62">(</span><span class="ts62">Defalut: true</span><span class="ts62">) </span><span class="ts48">Available since v 1.0.9</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts26">Note2:</span><span class="ts8">&nbsp;Make sure that rebar/cast unit/part numbers are up to date while using this method (otherwise the result will be </span><span class="ts12">null</span><span class="ts8">):</span></p>
                        <p class="ps5"><img width="334" height="184" border="0" src="images/images/numbering.png" /><span class="ts8">&nbsp;</span><span class="ts12">or </span><img width="270" height="171" border="0" src="images/images/nui1.png" /><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts26">Note3:</span><span class="ts8">&nbsp;It's recommended to remove duplicate rows before</span><span class="ts12">&nbsp;</span><span class="ts8">using this method to increasing the performance. (Discussed more </span><a href="idh-topic50.htm#FirstSamRebar" class="hs3">here</a><span class="ts8">). </span></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage samples:</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaPullOut()</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Using default values for all parameters.</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaPullOut(110, 110) </span><span class="ts8">==&gt; </span><span class="ts42">Using given values for first and second parameters and using default values for other parameters.</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaPullOut(110, 90, 2, 2, false)</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Using given values for first five parameters and using default values for other parameters.</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaPullOut(FontColor:2)</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Overriding the default value for &quot;font color&quot; and using default values for other parameters.</span></p>
                        <p class="ps5"><span class="ts61">GetTeklaPullOut(FontSize:2, ImageHeight:110)</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Overriding the default values for &quot;font size&quot; and &quot;image height&quot; and using default values for other parameters.</span></p>
                        <p class="ps25"><span class="ts63">GetTeklaPullOut(</span><span class="ts64">RotationAxis:0</span><span class="ts63">) </span><span class="ts40">==&gt; </span><span class="ts65">Overriding the default value for &quot;Rotation Axis&quot; and using default values for other parameters.</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell28" colspan="2">
                        <p class="ps0">&nbsp;</p>
                        <p class="ps5"><span class="ts26">Note4:</span><span class="ts8">&nbsp;If you need more customization, take a look at </span><span class="ts12">&quot;</span><span class="ts66">rebar_config.inp&quot;</span><span class="ts15">&nbsp;file (Learn more </span><a href="https://teklastructures.support.tekla.com/2020/en/dra_reinforcement_rebar_config_inp" target="_blank" class="hs3">here</a><span class="ts15">)</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_PartList"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;PartList&quot;</span><span class="ts50">(Available since v 1.0.8):</span></p>
                        <p class="ps5"><span class="ts8">This function returns the part collection (secondary parts + main part) of an assembly object (Discussed more </span><a href="idh-topic50.htm#TB1_SAM_PARTLIST" class="hs3">here</a><span class="ts8">).</span></p>
                        <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;Parts in sub-assemblies are not included.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="439" height="99" border="0" src="images/images/image(9).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_GetArray"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;GetArray&quot;</span><span class="ts50">(Available since v 1.0.8):</span></p>
                        <p class="ps5"><span class="ts8">Converts&nbsp; an enumerable (or an enumerator) to array.</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_DR2MODEL"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;GetModelObjectsOfType&lt;T&gt;&quot;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">Drawing objects are </span><span class="ts12">not </span><span class="ts8">the same as model objects. Drawings are just presentations of the model objects. This function takes drawing object collection and retrieves related object collection (of type &quot;T&quot;) in model. </span></p>
                        <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;It can be used with </span><a href="idh-topic80.htm#TB1_DDV" class="hs3">DrawingDatabase</a><span class="ts8">&nbsp;(or </span><a href="idh-topic80.htm#TB1_EDRAWING" class="hs3">EntireDrawing</a><span class="ts15">&nbsp;</span><span class="ts8">) variable and is only accessible in drawings. (Discussed more </span><a href="idh-topic50.htm#FSD3" class="hs2">here</a><span class="ts8">)</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="566" height="118" border="0" src="images/images/image(12).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts8">&nbsp;&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_IsValidModelObj"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;IsValidModelObjectOfType&lt;T&gt;&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function controls the validity of a drawing object (in </span><span class="ts12">TSD</span><span class="ts8">&nbsp;namespase) as a model object (of type &quot;T&quot;).</span></p>
                        <p class="ps5"><span class="ts26">Note1:</span><span class="ts8">&nbsp;</span><span class="ts67">OfType&lt;&gt;()</span><span class="ts8">&nbsp;method is used for filtering object types. Click </span><a href="idh-topic100.htm#TipOfType" class="hs3">here</a><span class="ts8">&nbsp;to find more about this method.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="562" height="352" border="0" src="images/image(23).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_DR2MODEL2"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;GetModelObjectOfType&lt;T&gt;&quot; </span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">Drawing object is </span><span class="ts12">not </span><span class="ts8">the same as model object. Drawings are just presentations of the model objects. This function takes a single drawing object (from </span><span class="ts12">TSD</span><span class="ts8">&nbsp;namespace) and retrieves related object (of type &quot;T&quot;) in model.</span></p>
                        <p class="ps5"><span class="ts26">Note1:</span><span class="ts8">&nbsp;It can be used with </span><a href="idh-topic80.htm#TB1_DDV" class="hs3">DrawingDatabase</a><span class="ts8">&nbsp;(or </span><a href="idh-topic80.htm#TB1_EDRAWING" class="hs3">EntireDrawing</a><span class="ts8">&nbsp;) variable and is only accessible in drawings.</span></p>
                        <p class="ps5"><span class="ts26">Note2:</span><span class="ts8">&nbsp;</span><span class="ts67">OfType&lt;&gt;()</span><span class="ts8">&nbsp;method is used for filtering object types. Click </span><a href="idh-topic100.htm#TipOfType" class="hs3">here</a><span class="ts8">&nbsp;to find more.</span></p>
                        <p class="ps5"><span class="ts26">Note3:</span><span class="ts8">&nbsp;After grouping </span><span class="ts17">inside</span><span class="ts8">&nbsp;query body, </span><span class="ts67">First()</span><span class="ts8">&nbsp;method is used to get one instance (first one) from each group. Click </span><a href="idh-topic100.htm#TipFirst" class="hs3">here</a><span class="ts8">&nbsp;to find more.</span></p>
                        <p class="ps5"><span class="ts26">Note4:</span><span class="ts8">&nbsp;Use this function with </span><a href="idh-topic80.htm#TB1_IsValidModelObj" class="hs3">IsValidModelObjectOfType&lt;T&gt;</a><span class="ts8">&nbsp;to avoid </span><span class="ts17">null</span><span class="ts8">&nbsp;exceptions.&nbsp;</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (Query):</span></p>
                        <p class="ps0"><img width="629" height="202" border="0" src="images/image(21).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample2 (Command):</span></p>
                        <p class="ps0"><img width="597" height="412" border="0" src="images/image(22).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_DRAWINGS"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;GetSelectedDrawings&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function takes the model instance and returns the collection of selected drawings.</span></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="493" height="164" border="0" src="images/image(49).png" /></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_PickObj"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;PickObjectsOfType&lt;T&gt;&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function takes a model instance and asks the user to pick model objects. The sequence is terminated by the middle button pick.</span></p>
                        <p class="ps5"><span class="ts26">Note1: </span><span class="ts8">It's only available in model space.</span></p>
                        <p class="ps5"><span class="ts26">Note2:</span><span class="ts8">&nbsp;You can also use &quot;</span><a href="idh-topic80.htm#TB1_MAINDB" class="hs3">Database</a><span class="ts8">&quot; (or </span><a href="idh-topic80.htm#TB1_EMODEL" class="hs3">&quot;EntireModel</a><span class="ts8">&quot;) variable to get current selected (or all) objects in model&nbsp; </span><span class="ts12">but</span><span class="ts8">&nbsp;these variables does not preserve the selection order. </span></p>
                        <p class="ps5"><span class="ts8">So use this function </span><span class="ts17">only</span><span class="ts8">&nbsp;when order of selection matters.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps0"><img width="429" height="264" border="0" src="images/images/image(15).png" /></p>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_PickPoints"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;PickPoints&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function asks the user to pick points in model (with a model instance) or in drawing (with a drawing handler instance) and returns the X,Y,Z collection of picked coordinates.</span></p>
                        <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;This function accepts an optional parameter for coordinate precision (Min: 0, Max: 10, Default: 2).</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts61">PickPoints()</span><span class="ts8">&nbsp; ==&gt; </span><span class="ts42">Storing picked coordinates (X, Y, Z) with default precision (Default:2)</span></p>
                        <p class="ps5"><span class="ts61">PickPoints(4)</span><span class="ts8">&nbsp;==&gt; </span><span class="ts42">Storing picked coordinates (X, Y, Z) with 4 digits of precision.</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (in model):</span></p>
                        <p class="ps0"><img width="381" height="72" border="0" src="images/images/image(16).png" /></p>
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample2 (in drawing):</span></p>
                        <p class="ps0"><img width="426" height="64" border="0" src="images/images/image(17).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_GetField"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;GetField&quot;&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This method looks into a DataRow and gets the row data stored in the column specified by index (that starts from zero) or column name (a case sensitive string).</span></p>
                        <p class="ps5"><span class="ts26">Note:</span><span class="ts8">&nbsp;This method checks the boundaries internally to avoid run-time exceptions.&nbsp; </span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (By column index):</span></p>
                        <p class="ps5"><span class="ts61">GetField(4)</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample2 (By column name):</span></p>
                        <p class="ps5"><span class="ts61">GetField(&quot;ColumnName&quot;)</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><img width="484" height="175" border="0" src="images/image(8).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_DelimitedReader"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;ReadDelimitedData&quot;&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">It's a tiny (but strong enough) text parser that can be used for parsing valid delimited text files (*.txt, *.csv, ...) to data table.</span></p>
                        <p class="ps5"><span class="ts26">Note1:</span><span class="ts8">&nbsp;The input text file </span><span class="ts12">must</span><span class="ts8">&nbsp;have header for each column (The first row of text file will be considered as headers):</span></p>
                        <p class="ps0"><img width="553" height="235" border="0" src="images/image(4).png" /></p>
                        <p class="ps5"><span class="ts26">Note2:</span><span class="ts8">&nbsp;All empty column names will be ignored.</span></p>
                        <p class="ps5"><span class="ts26">Note3:</span><span class="ts8">&nbsp;All duplicate column names will be ignored.</span></p>
                        <p class="ps5"><span class="ts26">Note4:</span><span class="ts8">&nbsp;All empty rows will be ignored.</span></p>
                        <p class="ps5"><span class="ts26">Note5:</span><span class="ts8">&nbsp;All comment rows will be ignored.</span></p>
                        <p class="ps0"><img width="589" height="256" border="0" src="images/image(9).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts26">Note6:</span><span class="ts8">&nbsp;This function accepts 4 parameters. three of them are optional (has default values):</span></p>
                        <p class="ps0"><img width="806" height="95" border="0" src="images/image(5).png" /></p>
                        <p class="ps0">&nbsp;</p>
                        <p class="ps5"><span class="ts12">1) Delimiter:</span><span class="ts8">&nbsp;&quot;,&quot; or &quot;;&quot; or &quot; &quot; or &quot;\t&quot; or...</span></p>
                        <p class="ps5"><span class="ts12">2) RemoveIdenticalRows:</span><span class="ts8">&nbsp;Removes identical rows </span><span class="ts12">(Default: true)</span></p>
                        <p class="ps5"><span class="ts12">3) CommentTokens:</span><span class="ts8">&nbsp;A string array that contains all comment tokens. Comment token indicates that the line is a comment </span><span class="ts12">(Default: &quot;//&quot; )</span></p>
                        <p class="ps5"><span class="ts12">4) Encoding:</span><span class="ts8">&nbsp;The character encoding to use. </span><span class="ts12">(Default: Encoding.UTF8)</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts26">Note7:</span><span class="ts8">&nbsp;After reading, you can access to fields with </span><a href="idh-topic80.htm#TB1_GetField" class="hs3">GetField</a><span class="ts15">&nbsp;method.</span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample:</span></p>
                        <p class="ps5"><span class="ts61">ReadDelimitedData(&quot;\t&quot;) </span><span class="ts8">=&gt;&nbsp; </span><span class="ts42">Delimiter: tab . Using default values for other parameters.</span></p>
                        <p class="ps5"><span class="ts61">ReadDelimitedData(&quot;,&quot; ,false)&nbsp;</span><span class="ts8">=&gt;&nbsp; </span><span class="ts42">Delimiter: comma , RemoveIdenticalRows = false . Using default values for other parameters.</span></p>
                        <p class="ps5"><span class="ts61">ReadDelimitedData(&quot; &quot;, CommentTokens: </span><span class="ts68">new string</span><span class="ts61">[2]{</span><span class="ts69">&quot;//&quot;</span><span class="ts61">, </span><span class="ts69">&quot;#&quot;</span><span class="ts61">} )&nbsp;</span><span class="ts8">&nbsp;=&gt;&nbsp; </span><span class="ts42">Delimiter: space, Comment tokens = &quot;//&quot; and &quot;#&quot; . Using default values for other parameters.</span></p>
                        <p class="ps25"><span class="ts70">ReadDelimitedData(&quot;\t&quot;, encoding: </span><span class="ts71">Encoding</span><span class="ts70">.GetEncoding(1252)) </span><span class="ts40">=&gt; </span><span class="ts65">Delimiter: tab . Encoding = CodePageID 1252 (Find more on </span><a href="https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers" target="_blank" class="hs7">MSDN</a><span class="ts65">) . Using default values for other parameters.</span><span class="ts64">&nbsp;</span><span class="ts40">&nbsp; </span></p>
                        <p class="ps5"><span class="ts18">&nbsp;</span></p>
                        <p class="ps0"><img width="575" height="469" border="0" src="images/image(6).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts15">After running, TeklaPad shows the constructed table in separate window (just for reviewing): </span></p>
                        <p class="ps0"><img width="387" height="214" border="0" src="images/image(7).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts38">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_MDHighlighter"></a><img width="25" height="25" border="0" src="images/exclusive.png" /><span class="ts60">&quot;Highlight&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts15">Highlight</span><span class="ts15">s</span><span class="ts15">&nbsp;</span><span class="ts15">the collection of </span><span class="ts15">existing model</span><span class="ts15">&nbsp;(or drawing)</span><span class="ts15">&nbsp;object</span><span class="ts15">s</span><span class="ts15">&nbsp;</span><span class="ts15">visually in model (or drawing).</span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample1 (Query/in model):</span></p>
                        <p class="ps0"><img width="615" height="178" border="0" src="images/image(28).png" /></p>
                        <p class="ps0">&nbsp;</p>
                        <p class="ps5"><span class="ts12">Usage sample2 (Query/in drawing):</span></p>
                        <p class="ps0"><img width="615" height="255" border="0" src="images/image(27).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <p class="ps5"><span class="ts12">Usage sample3 (Command/in model):</span></p>
                        <p class="ps0"><img width="533" height="279" border="0" src="images/image(29).png" /></p>
                        <p class="ps5"><span class="ts15">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_WP2Local"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;SetToLocalWorkPlaneOf&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function takes the model object and changes the work plane to the given part's local coordinate system. </span></p>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_WP2Global"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;SetToGlobalWorkPlane&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function takes the model instance and resets the work plane to global. </span></p>
                        <p class="ps5"><span class="ts8">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <p class="ps17"><a name="TB1_WP"></a><img width="25" height="25" border="0" src="images/images/exclusive.png" /><span class="ts60">&quot;SetToWorkPlane&quot;</span><span class="ts39">&nbsp;</span><span class="ts50">(Available since v 1.0.9):</span></p>
                        <p class="ps5"><span class="ts8">This function takes the model instance and changes the work plane to the given transformation plane.</span></p>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                        <div class="block0">
                          <div class="hline0"></div>
                        </div>
                        <p class="ps5"><span class="ts12">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell33">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                      <td class="cell34">
                        <p class="ps0"><span class="ts0">&nbsp;</span></p>
                      </td>
                    </tr>
                  </table>
                </div>
                <p class="ps0"><a name="TB1_INTELLISENSE"></a><span class="ts16">&gt;About intellisense </span></p>
                <div align="center">
                  <table class="tbl0">
                    <tr class="row0">
                      <td class="cell4" colspan="2">
                        <p class="ps5"><span class="ts8">C# language has its own syntax and also is case sensitive. An intellisense window is a smart code completion feature which makes writing code faster and less error-prone. It is an assistant window that appears automatically after '</span><span class="ts12">.</span><span class="ts8">' and '</span><span class="ts12">(</span><span class="ts8">' to show hint or possible options. </span><span class="ts26">It is also possible to call it manually by pressing &quot;</span><span class="ts25">Ctrl+space</span><span class="ts26">&quot; </span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="505" height="158" border="0" src="images/images/image(3).png" /></p>
                        <p class="ps6"><span class="ts8">[Shows the correct name by pressing </span><span class="ts12">Ctrl+space</span><span class="ts8">]</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="400" height="146" border="0" src="images/images/image(5).png" /></p>
                        <p class="ps6"><span class="ts8">[Shows the options after '</span><span class="ts12">.</span><span class="ts8">' ]</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                    </tr>
                    <tr class="row0">
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                        <p class="ps7"><img width="505" height="94" border="0" src="images/images/gtr1.png" /></p>
                        <p class="ps6"><span class="ts8">[Shows the correct format after '</span><span class="ts12">(</span><span class="ts8">' ]</span></p>
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                      <td class="cell3">
                        <p class="ps6"><span class="ts8">&nbsp;</span></p>
                      </td>
                    </tr>
                  </table>
                </div>
                <p class="ps5"><span class="ts8">And another good news is that the </span><span class="ts12">code snippet</span><span class="ts8">&nbsp;feature is also available. Code snippets can make writing program code quicker, easier, and more reliable. With them, you can type a few letters and then press </span><span class="ts12">tab twice</span><span class="ts8">&nbsp;to insert a code fragment. for example, just by typing </span><span class="ts37">foreach</span><span class="ts8">&nbsp;and pressing Tab </span><span class="ts12">twice </span><span class="ts8">in the editor, The editor creates the whole block code of </span><span class="ts37">foreach </span><span class="ts8">:</span></p>
                <p class="ps5"><span class="ts8">&nbsp;</span></p>
                <p class="ps25"><span class="ts63">foreach+</span><span class="ts72">TAB TAB &nbsp;&nbsp;&nbsp;&nbsp;===&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="ts73">foreach (var item in collection)</span></p>
                <p class="ps25"><span class="ts72">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="ts73">{</span></p>
                <p class="ps25"><span class="ts72">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
                <p class="ps25"><span class="ts72">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="ts73">} </span></p>
                <p class="ps25"><span class="ts73">&nbsp;</span></p>
                <p class="ps5"><span class="ts8">Click </span><a href="https://www.dotnetperls.com/snippet" target="_blank" class="hs3">here</a><span class="ts8">&nbsp;to find more about c# code snippets</span></p>
                <p class="ps4"><span class="ts3">&nbsp;</span></p>
              </td>
              <td class="cell0">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
            </tr>
            <tr class="row0">
              <td class="cell3">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
              <td class="cell4">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
              <td class="cell5">
                <p class="ps0"><span class="ts0">&nbsp;</span></p>
              </td>
            </tr>
          </table>
        </div>
      </td>
      <td class="cell0">
        <p class="ps0"><span class="ts0">&nbsp;</span></p>
      </td>
    </tr>
  </table>
</div>
</body>
</html>