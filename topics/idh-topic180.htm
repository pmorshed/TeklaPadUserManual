<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Extended Code Snippets (xSnippet)</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 4.25pt 4.25pt 4.25pt 4.25pt;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?fc61ebf6"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 180;
</script>
</head>
<body>
<div align="center">
  <table class="tbl6">
    <tr class="row0">
      <td class="cell6">
        <p class="ps0"><span class="ts0">&nbsp;</span></p>
      </td>
      <td class="cell7">
        <div align="center">
          <table class="tbl0">
            <tr class="row0">
              <td class="cell1">
                <p class="ps1"><span class="ts1">Navigation: </span><a href="idh-topic80.htm" class="hs0">Tab1: Tekla Database</a><span class="ts1">&nbsp;&gt; </span></p>
                <p class="ps2"><img width="16" height="16" border="0" src="images/pubclass.gif" /><span class="ts2">&nbsp;Extended Code Snippets (</span><span class="ts182">x</span><span class="ts2">Snippet)</span></p>
              </td>
              <td class="cell2">
                <p class="ps3"><a href="idh-topic150.htm" title="User Interface" class="hs0">Previous</a><span class="ts1">&nbsp;</span><a href="idh-topic50.htm" title="Samples" class="hs0">Next</a></p>
              </td>
            </tr>
          </table>
        </div>
      </td>
    </tr>
  </table>
</div>
<p class="ps5"><span class="ts33">&nbsp;</span></p>
<p class="ps43"><span class="ts79">While using the first tab of TeklaPad, You can also use extended code snippets (as well as default code snippets) for more efficient coding. </span></p>
<p class="ps43"><span class="ts134">&nbsp;</span></p>
<p class="ps43"><span class="ts183">Hint: </span><span class="ts79">You can invoke code snippet list manually with [Ctrl]+K+X (or Right-Click &gt; Insert Snippet). </span></p>
<p class="ps43"><span class="ts183">Hint: </span><span class="ts79">You can also call a code snippet by typing a few letters of its shortcut and selecting from the intellisense box and pressing [Tab] key twice.</span></p>
<p class="ps43"><span class="ts183">Hint: </span><span class="ts79">Code snippet may have some </span><span class="ts184">placeholders</span><span class="ts108">&nbsp;</span><span class="ts79">for customizing and </span><span class="ts82">you can use [Tab] key to cycle through these predefined locations. </span></p>
<p class="ps43"><span class="ts183">Hint: </span><span class="ts82">After finalizing (editing placeholders), Put the cursor on one of </span><span class="ts184">placeholders</span><span class="ts82">&nbsp;and press [Enter] to exit the snippet highlighting mode.</span></p>
<p class="ps5"><span class="ts17">&nbsp;</span></p>
<div class="block1" align="left">
  <table class="tbl9">
    <tr class="row0">
      <td class="cell15">
        <p class="ps31"><span class="ts154">Shortcut</span></p>
      </td>
      <td class="cell16">
        <p class="ps31"><span class="ts154">Desription</span></p>
      </td>
      <td class="cell17">
        <p class="ps31"><span class="ts154">Snippet</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">crl</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;</span><span class="ts159">C</span><span class="ts85">onsole.</span><span class="ts159">R</span><span class="ts85">ead</span><span class="ts159">L</span><span class="ts85">ine&quot;</span><span class="ts82">&nbsp;method </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">Console</span><span class="ts187">.ReadLine(); </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">csvin</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for reading *.csv (comma-separated values) file.</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">var</span><span class="ts187">&nbsp;csvData = ( </span><span class="ts188">path</span><span class="ts189">&nbsp;</span><span class="ts187">).</span><span class="ts186">ReadDelimitedData</span><span class="ts187">(&quot;,&quot;);</span></p>
        <p class="ps96"><span class="ts187">&nbsp;</span></p>
        <p class="ps96"><span class="ts186">foreach</span><span class="ts187">&nbsp;(</span><span class="ts186">DataRow</span><span class="ts187">&nbsp;</span><span class="ts190">item</span><span class="ts187">&nbsp;</span><span class="ts186">in</span><span class="ts187">&nbsp;csvData.Rows)</span></p>
        <p class="ps96"><span class="ts187">{</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//1- Getting text values (Name, Class, ...):</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//item.GetField(&quot;Header_Name&quot;);</span></p>
        <p class="ps96"><span class="ts191">&nbsp;</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//2- Getting double values (Coordinates, ...):</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//item.GetField&lt;double&gt;(&quot;Header_Name&quot;);</span></p>
        <p class="ps96"><span class="ts191">&nbsp;</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//3- Getting integer values (Phase, ...):</span></p>
        <p class="ps96">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts191">//item.GetField&lt;int&gt;(&quot;Header_Name&quot;);</span></p>
        <p class="ps96"><span class="ts187">} </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">dxfin </span><img width="12" height="11" border="0" src="images/dxftype.png" /></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for reading *.dxf file</span></p>
        <p class="ps53"><span class="ts192">(Powered by </span><a href="https://github.com/haplokuon/netDxf" target="_blank" class="hs12">netDxf</a><span class="ts192">&nbsp;library)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">DxfDocument</span><span class="ts187">&nbsp;doc = </span><span class="ts186">DxfDocument</span><span class="ts187">.Load( </span><span class="ts188">path</span><span class="ts189">&nbsp;</span><span class="ts187">);</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">dpick</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for picking drawing object with type &quot;T&quot; (TSD.Part/TSD.Text/...)&quot;</span></p>
        <p class="ps50"><span class="ts82">Hint: Drawing object types are stored in predefined TSD (Tekla.Structures.Drawing) namespace</span></p>
      </td>
      <td class="cell20">
        <p class="ps97"><span class="ts193">new </span><span class="ts194">TSD.DrawingHandler().GetActiveDrawing()</span><span class="ts195">.</span><span class="ts196">PickObjectOfType</span><span class="ts195">&lt; </span><span class="ts194">TSD.</span><span class="ts193">DrawingObject</span><span class="ts195">&nbsp;&gt;();</span><span class="ts52">&nbsp;</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">from</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;from&quot; clause (LINQ)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">from</span><span class="ts187">&nbsp;</span><span class="ts188">n</span><span class="ts187">&nbsp;</span><span class="ts186">in</span><span class="ts187">&nbsp;</span><span class="ts188">Source</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">ggifc </span><img width="11" height="11" border="0" src="images/ifctype.png" /></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for reading *.ifc file </span></p>
        <p class="ps53"><span class="ts192">(Powered by </span><a href="https://github.com/GeometryGym/GeometryGymIFC" target="_blank" class="hs12">GeometryGymIfc</a><span class="ts192">&nbsp;library)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">DatabaseIfc</span><span class="ts187">&nbsp;db = </span><span class="ts186">new DatabaseIfc</span><span class="ts187">( </span><span class="ts188">path</span><span class="ts189">&nbsp;</span><span class="ts187">); </span></p>
        <p class="ps96"><span class="ts186">IfcProject</span><span class="ts187">&nbsp;project = db.Project; </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">group</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;group&quot; clause (LINQ) </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">group</span><span class="ts187">&nbsp;</span><span class="ts188">n</span><span class="ts187">&nbsp;</span><span class="ts186">by</span><span class="ts197">&nbsp;</span><span class="ts188">Parameter</span><span class="ts187">&nbsp;</span><span class="ts186">into</span><span class="ts187">&nbsp;</span><span class="ts188">g</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">ibox</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;</span><a href="idh-topic150.htm#TB1_GetUIT" class="hs7">InputBox&lt;T&gt;</a><span class="ts82">&quot; method </span></p>
      </td>
      <td class="cell20">
        <p class="ps97"><span class="ts196">InputBox</span><span class="ts195">&lt; </span><span class="ts193">string</span><span class="ts195">&nbsp;&gt;( </span><span class="ts194">&quot;Enter value...&quot;</span><span class="ts195">&nbsp;);</span><span class="ts52">&nbsp;</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">let</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;let&quot; clause (LINQ)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">let&nbsp; </span><span class="ts188">NewName</span><span class="ts187">&nbsp; =&nbsp; </span><span class="ts188">ExistingData</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">mpick</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for picking model object with type &quot;T&quot; (Part/Beam/Assembly/....)</span></p>
      </td>
      <td class="cell20">
        <p class="ps97"><span class="ts193">new </span><span class="ts198">Model()</span><span class="ts195">.</span><span class="ts196">PickObjectOfType</span><span class="ts195">&lt; </span><span class="ts193">ModelObject</span><span class="ts199">&nbsp;</span><span class="ts195">&gt;()</span><span class="ts52">;</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">mth</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for creating local method </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">OutputType</span><span class="ts189">&nbsp; </span><span class="ts188">MyMethod</span><span class="ts189">&nbsp; </span><span class="ts187">( </span><span class="ts188">InputType</span><span class="ts187">&nbsp;input1 )</span></p>
        <p class="ps96"><span class="ts187">{</span></p>
        <p class="ps96"><span class="ts187">&nbsp; </span></p>
        <p class="ps96"><span class="ts187">}</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">new</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for defining new object (with some public properties) </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">new { </span><span class="ts188">prop1</span><span class="ts189">&nbsp;, </span><span class="ts188">prop2</span><span class="ts186">&nbsp;}</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">oftype</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for filtering a collection based on given Type </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">collection</span><span class="ts187">.</span><span class="ts186">OfType</span><span class="ts187">&lt; </span><span class="ts188">TypeNmae</span><span class="ts187">&nbsp;&gt;()</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">orderby</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;orderby&quot; clause (LINQ)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">orderby</span><span class="ts187">&nbsp;</span><span class="ts188">ParamName</span><span class="ts187">&nbsp;</span><span class="ts200">descending</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">ppic</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for getting pull-out picture for numbered&nbsp;reinforcements</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">r</span><span class="ts187">.</span><span class="ts186">GetTeklaPullOut</span><span class="ts187">(FontSize: 2, ImageHeight: 110) </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">round</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for rounding a value to the particular number of fractional digits </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">Math</span><span class="ts187">.Round(</span><span class="ts201">&nbsp; </span><span class="ts187">&nbsp;,2)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">rpt</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for extracting predefined Tekla template properties from model objects.</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">n</span><span class="ts187">.</span><span class="ts186">GetTeklaReport</span><span class="ts187">( </span><span class="ts188">&quot;PropName&quot;</span><span class="ts189">&nbsp;</span><span class="ts187">) </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">setuda</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for setting UDA </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">n</span><span class="ts187">.</span><span class="ts186">SetUserProperty</span><span class="ts187">( </span><span class="ts188">&quot;UDA&quot;</span><span class="ts189">&nbsp;</span><span class="ts187">, </span><span class="ts188">value</span><span class="ts189">&nbsp;</span><span class="ts187">) </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">sum</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for calculating the sum of numeric items in the collection</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">collection</span><span class="ts187">.</span><span class="ts186">Sum</span><span class="ts187">( x =&gt; (</span><span class="ts200">double</span><span class="ts187">)x.</span><span class="ts188">PropName</span><span class="ts197">&nbsp;</span><span class="ts187">)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">sump</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for calculating the sum of products of numeric items in the collection </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">collection</span><span class="ts187">.</span><span class="ts186">Sum</span><span class="ts187">( x =&gt; (</span><span class="ts200">double</span><span class="ts187">)(x.</span><span class="ts188">Prop1</span><span class="ts197">&nbsp;</span><span class="ts187">* x.</span><span class="ts188">Prop2</span><span class="ts197">&nbsp;</span><span class="ts187">) )</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">txtin</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for reading *.txt file </span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">string</span><span class="ts187">&nbsp;text = </span><span class="ts186">File</span><span class="ts187">.ReadAllText( </span><span class="ts200">path</span><span class="ts202">&nbsp;</span><span class="ts187">); </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">uda</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for extracting user defined attributes text from model objects</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts188">n</span><span class="ts187">.</span><span class="ts186">GetTeklaUDA</span><span class="ts187">( </span><span class="ts188">&quot;UDA&quot;</span><span class="ts189">&nbsp;</span><span class="ts187">) </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">where</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for &quot;where&quot; clause (LINQ)</span></p>
      </td>
      <td class="cell20">
        <p class="ps95"><span class="ts186">where</span><span class="ts187">&nbsp;</span><span class="ts188">PropName</span><span class="ts203">&nbsp;</span><span class="ts189">&nbsp;</span><span class="ts188">!= </span><span class="ts200">null</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell18">
        <p class="ps49"><span class="ts185">xmlin</span></p>
      </td>
      <td class="cell19">
        <p class="ps42"><span class="ts82">TeklaPad code snippet for reading *.xml file </span></p>
      </td>
      <td class="cell20">
        <p class="ps97"><span class="ts196">XDocument</span><span class="ts195">&nbsp;xmlDoc = </span><span class="ts196">XDocument</span><span class="ts195">.Load( </span><span class="ts194">path</span><span class="ts204">&nbsp;</span><span class="ts195">);</span><span class="ts52">&nbsp;</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps73"><span class="ts177">&nbsp;</span></p>
</body>
</html>